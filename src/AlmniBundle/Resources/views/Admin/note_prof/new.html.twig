{% extends '@Almni/Admin/base.html.twig' %}






{% block stylesheets %}
    <style>

        #interactive.viewport {position: relative; width: 100%; height: auto; overflow: hidden; text-align: center;}
        #interactive.viewport > canvas, #interactive.viewport > video {max-width: 100%;width: 100%;}
        canvas.drawing, canvas.drawingBuffer {position: absolute; left: 0; top: 0;}
    </style>
    {{ parent() }}

{% endblock %}



{% block body %}

    <div class="row page-titles">
        <div class="col-md-5 align-self-center">
            <h4 class="text-themecolor">Ajouter Note</h4>
        </div>
        <div class="col-md-7 align-self-center text-right">
            <div class="d-flex justify-content-end align-items-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                    <li class="breadcrumb-item active">Note</li>
                    <li class="breadcrumb-item active">Ajouter</li>
                </ol>

                <a href="{{ path('note_index') }}">  <button type="button" class="btn btn-info d-none d-lg-block m-l-15"><i class="fa fa-plus-circle"></i>Retour Ã  la liste</button></a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="card card-body">
                <h4 class="card-title">Ajouter Note</h4>

                {{ form_start(form,{'attr':{'class':'frm-horizontal mt-4'}}) }}

                <div class="form-group">
                    <div class="input-group">
                        <input id="scanner_input" class="form-control" placeholder="Click the button to scan an EAN..." type="text" />
                        <span class="input-group-btn">
                    <button class="btn btn-default" type="button" data-toggle="modal" data-target="#livestream_scanner">
                        <i class="fa fa-barcode"></i>
                    </button>
                </span>
                    </div>
                </div>
                <div class="form-group">
                    <label>Matiere</label>

                    {{ form_widget(form.idmatiere,{'attr':{'class':'form-control','id':'notesbundle_note_idmatiere','type':'text'}}) }}

                </div>
                    <div class="form-group">
                    <label>Formule</span></label>
                    {{ form_widget(form.formule,{'attr':{'class':'form-control','id':'Formule','type':'text','placeholder':'30% CC + 70 % EXAM'}}) }}
                </div>

                <div class="form-group">
                    <label>Note</label>

                    {{ form_widget(form.note,{'attr':{'class':'form-control','id':'note','type':'text','placeholder':'20'}}) }}

                </div>

                <div class="form-group">
                    <label>Remarque</label>

                    {{ form_widget(form.remarque,{'attr':{'class':'form-control','id':'remarque','type':'text','placeholder':'PASS'}}) }}

                </div>

                <div  style="visibility:  hidden">

                    {{ form_widget(form.idclasse,{'attr':{'class':'form-control','id':'classe_id','type':'text','placeholder':'3A2'}}) }}
                </div>
                <div style="visibility:  hidden">


                    {{ form_widget(form.idetudent,{'attr':{'class':'form-control','id':'eleve_id','type':'text','placeholder':'Foulen Ben Foulen'}}) }}

                </div>

          <div  style="visibility:  hidden">


                    {{ form_widget(form.idprof,{'attr':{'class':'form-control','id':'Prof','type':'text','placeholder':'Foulen Ben Foulen'}}) }}

          </div>






                {{ form_widget(form) }}
                <input class="btn btn-lg btn-success"  type="submit" value="Ajouter" />

                {{ form_end(form) }}



            </div>
        </div>
    </div>

    </div>





    <div class="modal" id="livestream_scanner">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Barcode Scanner</h4>
                </div>
                <div class="modal-body" style="position: static">
                    <div id="interactive" class="viewport"></div>
                    <div class="error"></div>
                </div>
                <div class="modal-footer">
                    <label class="btn btn-default pull-left">
                        <i class="fa fa-camera"></i> Use camera app
                        <input type="file" accept="image/*;capture=camera" capture="camera" class="hidden" />
                    </label>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->



{% endblock %}
{% block javascripts %}

    {{ parent() }}
    <script src="https://a.kabachnik.info/assets/js/libs/quagga.min.js"></script>
    <script>

        $(function() {
            // Create the QuaggaJS config object for the live stream
            var liveStreamConfig = {
                inputStream: {
                    type: "LiveStream",
                    constraints: {
                        width: { min: 640 },
                        height: { min: 480 },
                        aspectRatio: { min: 1, max: 100 },
                        facingMode: "environment" // or "user" for the front camera
                    }
                },
                locator: {
                    patchSize: "medium",
                    halfSample: true
                },
                numOfWorkers: navigator.hardwareConcurrency
                    ? navigator.hardwareConcurrency
                    : 4,
                decoder: {
                    readers: [{ format: "code_128_reader", config: {} }]
                },
                locate: true
            };
            // The fallback to the file API requires a different inputStream option.
            // The rest is the same
            var fileConfig = $.extend({}, liveStreamConfig, {
                inputStream: {
                    size: 800
                }
            });
            // Start the live stream scanner when the modal opens
            $("#livestream_scanner").on("shown.bs.modal", function(e) {
                Quagga.init(liveStreamConfig, function(err) {
                    if (err) {
                        $("#livestream_scanner .modal-body .error").html(
                            '<div class="alert alert-danger"><strong><i class="fa fa-exclamation-triangle"></i> ' +
                            err.name +
                            "</strong>: " +
                            err.message +
                            "</div>"
                        );
                        Quagga.stop();
                        return;
                    }
                    Quagga.start();
                });
            });

            // Make sure, QuaggaJS draws frames an lines around possible
            // barcodes on the live stream
            Quagga.onProcessed(function(result) {
                var drawingCtx = Quagga.canvas.ctx.overlay,
                    drawingCanvas = Quagga.canvas.dom.overlay;

                if (result) {
                    if (result.boxes) {
                        drawingCtx.clearRect(
                            0,
                            0,
                            parseInt(drawingCanvas.getAttribute("width")),
                            parseInt(drawingCanvas.getAttribute("height"))
                        );
                        result.boxes
                            .filter(function(box) {
                                return box !== result.box;
                            })
                            .forEach(function(box) {
                                Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {
                                    color: "green",
                                    lineWidth: 2
                                });
                            });
                    }

                    if (result.box) {
                        Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {
                            color: "#00F",
                            lineWidth: 2
                        });
                    }

                    if (result.codeResult && result.codeResult.code) {
                        Quagga.ImageDebug.drawPath(
                            result.line,
                            { x: "x", y: "y" },
                            drawingCtx,
                            { color: "red", lineWidth: 3 }
                        );
                    }
                }
            });

            // Once a barcode had been read successfully, stop quagga and
            // close the modal after a second to let the user notice where
            // the barcode had actually been found.
            Quagga.onDetected(function(result) {
                if (result.codeResult.code) {

                    $("#scanner_input").val(result.codeResult.code);
                    var decodedString = window.atob(result.codeResult.code);
                    var res = decodedString.split("-");
                    console.log(decodedString);
                    console.log(res);
                    console.log(res[0]);
                    $("#notesbundle_note_idclasse").val(res[0]);
                    $("#notesbundle_note_idmatiere").val(res[1]);
                    $("#notesbundle_note_idetudent").val(res[2]);
                    $("#notesbundle_note_idprof").val("2"); // prof id
                    Quagga.stop();
                    setTimeout(function() {
                        $("#livestream_scanner").modal("hide");
                    }, 1000);
                }
            });

            // Stop quagga in any case, when the modal is closed
            $("#livestream_scanner").on("hide.bs.modal", function() {
                if (Quagga) {
                    Quagga.stop();
                }
            });

            // Call Quagga.decodeSingle() for every file selected in the
            // file input
            $("#livestream_scanner input:file").on("change", function(e) {
                if (e.target.files && e.target.files.length) {
                    Quagga.decodeSingle(
                        $.extend({}, fileConfig, {
                            src: URL.createObjectURL(e.target.files[0])
                        }),
                        function(result) {
                            alert(result.codeResult.code);
                        }
                    );
                }
            });
        });

    </script>

{% endblock %}